name: Checks

on:
  push:
    paths-ignore:
    - '.github/ISSUE_TEMPLATE/**'
    - 'LICENSE.txt'
    branches:
    - master
  pull_request:
    branches:
    - master

concurrency:
  group: checks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_common:
    name: "Check CI scripts"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: "Checking for common errors in build, deployment, and CI."
      run: ./scripts/check-common.sh

  check_PR_TODOs:
    name: "Check PR-TODOs"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: "Checking for open PR-related TODO items"
      run: ./scripts/check-pr-todos.sh

  check_clang_format:
    name: "Check C++ style"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.9.0
      with:
        clang-format-version: '15'
        check-path: 'src'
        exclude-regex: 'sse2neon.h'

  editorconfig:
    name: "Check editorconfig"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  check_clang_tidy:
    name: "Clang Tidy"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "ccache-ubuntu2204-clang-tidy"
          max-size: 256M
      - name: Updating APT package database
        run: sudo apt -q update && sudo apt upgrade -y
      - name: Installing xmllint for ci-set-vars
        run: sudo apt -qy install libxml2-utils
      - name: Installing clang-tidy
        run: sudo apt -qy install clang-tidy
      - name: Installing CodeChecker
        run: |
          set -ex
          sudo apt install libxml2-dev libxslt-dev
          sudo pip3 install CodeChecker
          CodeChecker -h
      - name: set environment variables
        id: set_vars
        run: ./scripts/ci-set-vars.sh
        env:
          REPOSITORY: ${{ github.event.repository.name }}
      - name: "install dependencies"
        run: sudo ./scripts/install-deps.sh
      - name: "Post-fix embedded dependency permissions."
        run: sudo find _deps/sources -exec chown $UID {} \;
      - name: Install Clang
        run: sudo apt install -y clang-14
      - name: "create build directory"
        run: mkdir build
      - name: CMake version
        run: cmake --version
      - name: "cmake"
        run: |
          BUILD_DIR="build" \
            CXX="clang++-14" \
            EXTRA_CMAKE_FLAGS="$EXTRA_CMAKE_FLAGS \
                               -DCMAKE_BUILD_TYPE=Debug \
                               -DCMAKE_INSTALL_PREFIX="/usr" \
                               -DCONTOUR_INSTALL_TOOLS=ON \
                               -DPEDANTIC_COMPILER=ON \
                               -DLIBUNICODE_UCD_BASE_DIR=$(pwd)/_ucd \
                               -DENABLE_TIDY=ON \
                               " \
            ./scripts/ci-prepare-contour.sh
      - name: "build"
        run: cmake --build build/ -- -j3
