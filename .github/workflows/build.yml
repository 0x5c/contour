name: Build

on:
  push:
    branches:
      - master
      - wip
      - testing
      - unstable
      - broken
  pull_request:
    branches:
      - master

jobs:
  ubuntu_2004:
    name: "Ubuntu Linux 20.04"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: "initialize sub modules"
        run: git submodule update --init --recursive
      - name: "install dependencies"
        run: |
          set -ex
          cat /etc/apt/sources.list
          sudo apt -q update
          sudo apt install -y "g++-9" \
                  libfreetype6-dev \
                  qtbase5-dev libqt5gui5 cmake extra-cmake-modules \
                  libfontconfig1-dev libharfbuzz-dev
      - name: "create build directory"
        run: mkdir build
      - name: "cmake"
        run: |
          cd build && cmake .. \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-9 \
            -DYAML_BUILD_SHARED_LIBS=OFF -DYAML_CPP_BUILD_CONTRIB=OFF \
            -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF \
            -DYAML_CPP_INSTALL=OFF
      - name: "build"
        run: cmake --build build/ -- -j3
      - name: "test: crispy"
        run: ./build/src/crispy/crispy_test
      - name: "test: libterminal"
        run: ./build/src/terminal/terminal_test

  ubuntu_2004_qt_kde:
    name: "Ubuntu Linux 20.04 (with KWin support)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: "initialize sub modules"
        run: git submodule update --init --recursive
      - name: "install dependencies"
        run: |
          set -ex
          cat /etc/apt/sources.list
          sudo apt -q update
          sudo apt install -y "g++-9" \
                  libfreetype6-dev \
                  qtbase5-dev libqt5gui5 extra-cmake-modules libkf5windowsystem-dev \
                  libfontconfig1-dev libharfbuzz-dev
      - name: "create build directory"
        run: mkdir build
      - name: "cmake"
        run: |
          cd build && cmake .. \
            -DCONTOUR_BLUR_PLATFORM_KWIN=ON \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-9 \
            -DYAML_BUILD_SHARED_LIBS=OFF -DYAML_CPP_BUILD_CONTRIB=OFF \
            -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF \
            -DYAML_CPP_INSTALL=OFF
      - name: "build"
        run: cmake --build build/ -- -j3
      - name: "test: crispy"
        run: ./build/src/crispy/crispy_test
      - name: "test: libterminal"
        run: ./build/src/terminal/terminal_test

  ubuntu1804:
    name: "Ubuntu Linux 18.04"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: "initialize sub modules"
        run: git submodule update --init --recursive
      - name: "install dependencies"
        run: |
          set -ex
          cat /etc/apt/sources.list
          sudo apt -q update
          sudo apt install -y "g++-9" libboost-all-dev \
                  libfreetype6-dev \
                  qtbase5-dev libqt5gui5 extra-cmake-modules libkf5windowsystem-dev \
                  libfontconfig1-dev libharfbuzz-dev \
                  debhelper dpkg-dev
      - name: "Get specific version CMake, v3.18.3"
        uses: lukka/get-cmake@v3.18.3
      - name: "create build directory"
        run: mkdir build
      - name: "cmake"
        run: |
          cd build && cmake .. \
            -DUSE_BOOST_FILESYSTEM=ON \
            -DCONTOUR_BLUR_PLATFORM_KWIN=ON \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-9 \
            -DYAML_BUILD_SHARED_LIBS=OFF -DYAML_CPP_BUILD_CONTRIB=OFF \
            -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF \
            -DYAML_CPP_INSTALL=OFF
      - name: "build"
        run: cmake --build build/ -- -j3
      - name: "test: crispy"
        run: ./build/src/crispy/crispy_test
      - name: "test: libterminal"
        run: ./build/src/terminal/terminal_test

  osx:
    name: "OS/X"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Initialize sub modules"
        run: git submodule update --init --recursive
      - name: "Install dependencies"
        run: |
          set -ex
          #brew update
          brew install freetype fontconfig qt5 harfbuzz boost pkg-config
      - name: "Create build directory"
        run: mkdir build
      - name: "Generate build files"
        run: |
          cmake . \
                -DCMAKE_BUILD_TYPE=Release \
                -DYAML_BUILD_SHARED_LIBS=OFF -DYAML_CPP_BUILD_CONTRIB=OFF \
                -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF \
                -DYAML_CPP_INSTALL=OFF \
                -DQt5_DIR="$(brew --prefix qt5)/lib/cmake/Qt5" \
                -B build/
      - name: "Build"
        run: cmake --build build/
      - name: "test: libcrispy"
        run: ./build/src/crispy/crispy_test
      - name: "test: libterminal"
        run: ./build/src/terminal/terminal_test

  windows:
    name: "Windows"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: "Initialize sub modules"
      run: git submodule update --init --recursive
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: "vcpkg: Install dependencies"
      uses: lukka/run-vcpkg@v5
      id: runvcpkg
      with:
        vcpkgArguments: freetype fontconfig harfbuzz
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgGitCommitId: acd2f59e931172f46706ef8ac2fc9b21f71fba85
        vcpkgTriplet: x64-windows
    - name: "create build directory"
      run: mkdir build
    - name: "Generate build files"
      run: cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="${{ runner.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows -DYAML_BUILD_SHARED_LIBS=OFF -DCONTOUR_EXAMPLES=OFF -DLIBTERMINAL_TESTING=ON -DLIBUNICODE_TESTING=ON -DYAML_CPP_BUILD_CONTRIB=OFF -DYAML_CPP_BUILD_TESTS=OFF -DYAML_CPP_BUILD_TOOLS=OFF -DYAML_CPP_INSTALL=OFF -B build .
    - name: "Build"
      run: cmake --build build/
    - name: "test: libcrispy"
      run: .\build\src\crispy\Debug\crispy_test.exe
    - name: "test: libterminal"
      run: .\build\src\terminal\Debug\terminal_test.exe

